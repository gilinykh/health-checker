# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: List current directory
      run: ls -la      
    - name: Output Run Number
      run: echo ${{ github.run_number }}      
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.DEPLOY_SERVER_KEY }}      
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
    - name: Add Known Hosts entry
      run: ssh-keyscan -H ${{ secrets.DEPLOY_SERVER_HOST }} >> ~/.ssh/known_hosts  
    - name: Upload repo to remote server
      env:
         SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
       ssh-agent -a $SSH_AUTH_SOCK > /dev/null
       ssh-add - <<< "${{ secrets.DEPLOY_SERVER_KEY }}"
       scp -o StrictHostKeyChecking=no ./target/*.jar root@${{ secrets.DEPLOY_SERVER_HOST }}:/tmp  
        
